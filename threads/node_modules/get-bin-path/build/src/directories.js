import{readdirSync}from"node:fs";
import{readdir}from"node:fs/promises";
import{resolve}from"node:path";



export const getDirField=async(packageJsonFields)=>{
const binDir=getBinDir(packageJsonFields);

if(binDir===undefined){
return
}

try{
const paths=await readdir(binDir);
return findDirField(binDir,paths,packageJsonFields)
}catch{}
};


export const getDirFieldSync=(packageJsonFields)=>{
const binDir=getBinDir(packageJsonFields);

if(binDir===undefined){
return
}

try{
const paths=readdirSync(binDir);
return findDirField(binDir,paths,packageJsonFields)
}catch{}
};

const getBinDir=({directories,rootDir})=>
typeof directories?.bin==="string"?
resolve(rootDir,directories.bin):
undefined;

const findDirField=(binDir,paths,{name,packageName})=>{
const dirField=getDirFieldValue(paths,name,packageName);
return paths.includes(dirField)?resolve(binDir,dirField):undefined
};

const getDirFieldValue=(paths,name,packageName)=>{
if(name!==undefined){
return name
}

return paths.length===1?paths[0]:packageName
};